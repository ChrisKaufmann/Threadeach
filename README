Threadeach.pm - a perl module for easy threading of processes.
Given a reference to a function and an array, it will create a thread for each instance (up to a maximum),
creating a new thread whenever one exits, until all the elements in the array have been completed.
It will then return an array of the returned values (if any) in order.

There are three options:
sub threadeach(\&subroutine,@array); # will run with the number of cpus in the machine (or 4 if unavailable)
sub threadall(\&subroutine,@array); #will thread them all at once (be careful here)
sub threadsome(\&subroutine,$num_of_threads,@array); #will use $num_of_threads threads at a time

The threaded_bff.pl program will run a threaded version of the bff.sh script from the archive.org team.
threaded_bff.pl <start> <end> <# threads>
ex: perl threaded_bff.pl 10100000 10199999 100
will grab from 10,100,000 to 10,199,999 with 100 threads at all times.  

Example:
#!/usr/bin/perl
use Threadeach;

my @lines=Threadeach::threadeach(\&get_ip_info,0..255);
print join("\n",@lines);

sub get_ip_info
{
    my $end=shift;
	sleep(rand(5));
	return $end;
}
